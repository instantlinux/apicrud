# Usage:
# Set these private variables in gitlab-ci environment:
#   PYPI_PASSWORD, PYPI_USER, REGISTRY_URI

stages:
  - Analyze and Unit Test
  - api
  - worker
  - Functional Tests
  - Promote Images
  - Publish Package
  - Clean

image: instantlinux/python-builder:3.8.2-r0

before_script:
  - export TAG=bld_$CI_PIPELINE_IID_${CI_COMMIT_SHA:0:7}

.registry_template: &registry_login
  before_script:
  - export TAG=bld_$CI_PIPELINE_IID_${CI_COMMIT_SHA:0:7}
  - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $REGISTRY_URI
  services: [ "docker:dind" ]

.create_image_template: &create_image
  script: make create_image

analysis:
  stage: Analyze and Unit Test
  script:
  - set -e
  - make analysis
  - XARGS=--runslow make test
  artifacts:
    paths:
    - apicrud/htmlcov/
    - tests/results.xml
    reports:
      junit: tests/results.xml
  coverage: '/TOTAL.*\s(\d+)%/'

create_example_api:
  stage: api
  <<: *registry_login
  <<: *create_image
  only: { refs: [ master ] }

create_example_worker:
  stage: worker
  <<: *registry_login
  <<: *create_image

test:
  stage: Functional Tests
  script: make test_functional

promote_images:
  stage: Promote Images
  <<: *registry_login
  script: IMAGES="api worker" make promote_images
  only: { refs: [ master ] }

publish:
  stage: Publish Package
  script: make publish
  only: [ tags ]

clean:
  stage: Clean
  <<: *registry_login
  script: make clean_images
  when: always
