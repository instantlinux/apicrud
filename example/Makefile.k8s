# Kubernetes deployment
#  Env var TAG must be set; it will not default to 'latest'

create_image:
	@echo docker build -t $(REGISTRY)/$(APPNAME)-$(CI_JOB_NAME):$(TAG)
	@docker build -t $(REGISTRY)/$(APPNAME)-$(CI_JOB_NAME):$(TAG) . \
	 -f $(APPNAME)/Dockerfile.$(CI_JOB_NAME) \
	 --build-arg=VCS_REF=$(CI_COMMIT_SHA) \
	 --build-arg=TAG=$(TAG) \
	 --build-arg=BUILD_DATE=$(shell date +%Y-%m-%dT%H:%M:%SZ) && \
	docker push $(REGISTRY)/$(APPNAME)-$(CI_JOB_NAME):$(TAG)

promote_images:
	$(foreach target, $(IMAGES), \
	  image=$(shell basename $(target)) && \
	  docker pull $(REGISTRY)/$(APPNAME)-$${image}:$(TAG) && \
	  docker tag $(REGISTRY)/$(APPNAME)-$${image}:$(TAG) \
	    $(REGISTRY)/$(APPNAME)-$${image}:latest && \
	  docker push $(REGISTRY)/$(APPNAME)-$${image}:latest \
	;)
ifneq ($(CI_COMMIT_TAG),)
	# Also push to dockerhub, if registry is somewhere like GitLab
ifneq ($(REGISTRY), $(USER_LOGIN))
	docker login -u $(USER_LOGIN) -p $(DOCKER_TOKEN)
	$(foreach target, $(IMAGES), \
	  image=$(shell basename $(target)) && \
	  docker tag $(REGISTRY)/$(APPNAME)-$${image}:$(TAG) \
	    $(USER_LOGIN)/$(APPNAME)-$${image}:$(CI_COMMIT_TAG) && \
	  docker tag $(REGISTRY)/$(APPNAME)-$${image}:$(TAG) \
	    $(USER_LOGIN)/$(APPNAME)-$${image}:latest && \
	  docker push $(USER_LOGIN)/$(APPNAME)-$${image}:$(CI_COMMIT_TAG) && \
	  docker push $(USER_LOGIN)/$(APPNAME)-$${image}:latest \
	;)
	curl -X post https://hooks.microbadger.com/images/$(USER_LOGIN)/$(APPNAME)-$${image}/$(MICROBADGER_TOKEN)
endif
endif

clean_images:
	docker rmi $(REGISTRY)/$(APPNAME)-api:$(TAG) || true
	docker rmi $(REGISTRY)/$(APPNAME)-worker:$(TAG) || true

K8S_YAML = $(basename $(wildcard example/k8s/*.yaml))
$(K8S_YAML):
	@SERVICE_NAME=$(APPNAME) SERVICE_IP=$(SERVICE_IP) \
	 envsubst < $@.yaml | kubectl --kubeconfig=$(KUBECONFIG) apply -f -

deploy_k8s: example/k8s/rmq example/k8s/redis

deploy_local: mariadb_adhoc redis_adhoc rmq_adhoc example/k8s/dev
ifeq ($(TAG),)
	@echo Please specify an existing tag in form bld_abcdefg
	@exit 1
endif
	EXAMPLE_ENV=local TAG=$(TAG) \
	make $(APPNAME)/k8s/api $(APPNAME)/k8s/worker $(APPNAME)/k8s/ui

deploy_dev:
ifeq ($(TAG),)
	@echo Please specify an existing tag in form bld_abcdefg
	@exit 1
endif
	EXAMPLE_ENV=dev TAG=$(TAG) \
	make deploy_k8s $(APPNAME)/k8s/api $(APPNAME)/k8s/worker

deploy_prod:  $(APPNAME)-api/tag $(APPNAME)-worker/tag
	EXAMPLE_ENV=prod make deploy_k8s $(APPNAME)/k8s/api $(APPNAME)k8s/worker \
	  $(APPNAME)/k8s/ui

$(APPNAME)-%/tag:
	docker pull $(REGISTRY)/$(@D):latest
	docker tag $(REGISTRY)/$(@D):latest $(REGISTRY)/$(@D):$(TAG)
	docker push $(REGISTRY)/$(@D):$(TAG)
