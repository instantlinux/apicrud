---
apiVersion: v1
kind: Service
metadata:
  name: $SERVICE_NAME-prometheus
spec:
  clusterIP: None
  ports:
  - port: 9090
  selector:
    app.kubernetes.io/name: $SERVICE_NAME-prometheus
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: $SERVICE_NAME-prometheus
  labels:
    app.kubernetes.io/name: $SERVICE_NAME-prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: $SERVICE_NAME-prometheus
  serviceName: $SERVICE_NAME-prometheus
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME-prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v$VERSION_PROMETHEUS
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
        - name: data
          mountPath: /prometheus
      initContainers:
      - name: $SERVICE_NAME-init
        image: alpine:3.12
        command: [ chown, nobody, /prometheus ]
        volumeMounts:
        - name: data
          mountPath: /prometheus
      volumes:
      - name: config
        configMap:
          name: $SERVICE_NAME-prometheus
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 500Mi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: $SERVICE_NAME-prometheus
data:
  prometheus.yml: |
    global:
      # scrape_interval:     60s  # Default is every 1 minute.
      # evaluation_interval: 60s  # The default is every 1 minute.
      # scrape_timeout:      10s  # The default is 10 seconds.
    scrape_configs:
    - job_name: $SERVICE_NAME
      metrics_path: /api/v1/metrics
      static_configs:
      - targets: ['$TARGET_PROMETHEUS:$EXAMPLE_API_PORT']
    - job_name: prometheus
      static_configs:
      - targets: ['localhost:9090']
