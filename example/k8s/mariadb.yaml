---
apiVersion: v1
kind: Service
metadata:
  name: $SERVICE_NAME-mariadb
spec:
  clusterIP: $SERVICE_IP
  ports:
  - port: 3306
  selector:
    app.kubernetes.io/name: $SERVICE_NAME-mariadb
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME-mariadb
    release: "0.1"
  name: $SERVICE_NAME-mariadb
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: $SERVICE_NAME-mariadb
      release: "0.1"
  serviceName: $SERVICE_NAME-mariadb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME-mariadb
        release: "0.1"
    spec:
      containers:
      - name: mariadb
        image: mariadb:$VERSION_MARIADB
        env:
        - { name: MYSQL_DATABASE, value: ${SERVICE_NAME}_${APP_ENV} }
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mariadb-root-password
              key: mariadb-root-password
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: db
          mountPath: /var/lib/mysql
        - name: initdb
          mountPath: /etc/mysql/conf.d/my.cnf
          subPath: my.cnf
        - name: initdb
          mountPath: /docker-entrypoint-initdb.d/setup.sql
          subPath: setup.sql
      volumes:
      - name: initdb
        configMap:
          name: $SERVICE_NAME-initdb
  volumeClaimTemplates:
  - metadata:
      name: db
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 500Mi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: $SERVICE_NAME-initdb
data:
  setup.sql: |
    GRANT ALL PRIVILEGES ON `${SERVICE_NAME}_${APP_ENV}`.* TO '$DB_USER'@'%' IDENTIFIED BY '$DB_PASS';
  my.cnf: |
    [mysqld]
    character_set_server  = utf8
    innodb_data_file_path = ibdata1:10M:autoextend
