profile:
  get:
    summary: Find profile items by conditions
    description: Find profile items based on conditions
    operationId: ProfileController.find
    parameters:
    - description: Profile item ID
      in: query
      name: id
      schema:
        $ref: '#/components/schemas/base/properties/id'
    - description: Profile item
      in: query
      name: item
      schema:
        $ref: '#/components/schemas/Profile/properties/item'
    - description: Status
      in: query
      name: status
      schema:
        $ref: '#/components/schemas/Profile/properties/status'
    - description: Maximum records to fetch
      in: query
      name: limit
      schema:
        type: integer
        minimum: 0
        maximum: 10000
    - description: Record offset for pagination
      in: query
      name: offset
      schema:
        type: integer
        minimum: 0
        maximum: 2147483647
    - description: Sort-by field
      in: query
      name: sort
      schema:
        type: string
        maxLength: 20
    - description: Sort-order field
      in: query
      name: order
      schema:
        enum:
        - asc
        - desc
        type: string
    - description: Filter field
      in: query
      name: filter
      schema:
        type: string
        maxLength: 2048
    - description: Pagination token
      in: query
      name: cursor_next
      schema:
        type: string
        format: b64string
    responses:
      200:
        content:
          application/json:
            schema:
              items:
                type: array
                $ref: '#/components/schemas/Profile'
        description: successful operation
      400:
        content: {}
        description: Invalid conditions supplied
      404:
        content: {}
        description: profile item not found
    security:
    - apikey: []
    - basic: []
    tags:
    - profile
    x-codegen-request-body-name: conditions
    x-openapi-router-controller: controllers.profile
  post:
    summary: Create a new profile item
    operationId: ProfileController.create
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Profile'
      required: true
    responses:
      405:
        content: {}
        description: Invalid input
    security:
    - apikey: ['full']
    - basic: []
    tags:
    - profile
    x-codegen-request-body-name: body
    x-openapi-router-controller: controllers.profile
profile-id:
  get:
    summary: Find profile item by ID
    description: Returns a single profile item
    operationId: ProfileController.get
    parameters:
    - description: ID of profile item to return
      in: path
      name: id
      required: true
      schema:
        type: string
        minLength: 10
        maxLength: 10
    responses:
      200:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
        description: successful operation
      400:
        content: {}
        description: Invalid ID supplied
      404:
        content: {}
        description: profile item not found
    security:
    - apikey: []
    - basic: []
    tags:
    - profile
    x-openapi-router-controller: controllers.profile
  put:
    summary: Update an existing profile item
    operationId: ProfileController.update
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Profile'
      required: true
    parameters:
    - description: profile item to modify
      in: path
      name: id
      required: true
      schema:
        type: string
        minLength: 10
        maxLength: 10
    responses:
      404:
        content: {}
        description: profile item not found
      405:
        content: {}
        description: Validation exception
    security:
    - apikey: ['full']
    - basic: []
    tags:
    - profile
    x-codegen-request-body-name: body
    x-openapi-router-controller: controllers.profile
profile-ids:
  delete:
    summary: Delete one or more profile items
    operationId: ProfileController.delete
    parameters:
    - description: profile ids to delete
      in: path
      name: ids
      required: true
      schema:
        items:
          type: string
          minLength: 10
          maxLength: 10
        type: array
    - description: force-delete instead of disable
      in: query
      name: force
      schema:
        default: false
        type: boolean
    responses:
      400:
        content: {}
        description: Invalid id value
    security:
    - apikey: ['full']
    - basic: []
    tags:
    - profile
    x-openapi-router-controller: controllers.profile
