# Default values for media.
nodePort: None
deployment:
  containerPorts: [ containerPort: 8085 ]
  env:
    amq_host: example-backend-rmq
    app_env: dev
    app_port: 8085
    cors_origins: https://dev.example.com
    db_host: db00
    db_migrate_enable: "no"
    db_schema_maxtime: 0
    db_name: example_dev
    db_user: example_dev
    public_url: https://media-dev.example.com
    redis_host: apicrud-backend-redis
    redis_port: 6379
    service_name: media
    tz: UTC
  xenv: []
  resources:
    limits:
      memory: 1024Mi
    requests:
      cpu: 50m
      memory: 64Mi
livenessProbe:
  initialDelaySeconds: 30
  periodSeconds: 10
  httpGet:
    path: /api/v1/health
    port: 8085
volumeMounts:
- mountPath: /opt/app/config.yaml
  name: config
  subPath: config.yaml
- mountPath: /opt/app/rbac.yaml
  name: config
  subPath: rbac.yaml
volumes:
- name: config
  configMap:
    name: example-media-config

image:
  repository: registry.gitlab.com/instantlinux/apicrud-media/apicrud-media
  pullPolicy: IfNotPresent
  # tag: default

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  enabled: false
service:
  clusterIP: None
  ports:
  - { port: 80, targetPort: 8085, name: web }
  type: ClusterIP
autoscaling:
  enabled: false

ingress:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/client-body-buffer-size: 20m
    nginx.ingress.kubernetes.io/proxy-body-size: 20m
  rules:
  - host: media-dev.example.com
    http:
      paths:
      - path: /api
        backend:
          service:
            name: example-media
            port:
              number: 80
        pathType: Prefix
      - path: /
        backend:
          service:
            name: example-ui
            port:
              number: 80
        pathType: Prefix
  tls:
  - hosts:
    - media-dev.example.com
    secretName: tls-example-media
